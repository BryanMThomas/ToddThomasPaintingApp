{"ast":null,"code":"export const filterProperties = (filterAttributes, itemAttributes) => {\n  if (filterAttributes.minPrice !== \"No Min\" && filterAttributes.minPrice > itemAttributes.price) {\n    return false;\n  }\n\n  if (filterAttributes.maxPrice !== \"No Max\" && filterAttributes.maxPrice < itemAttributes.price) {\n    return false;\n  }\n\n  if (filterAttributes.minBeds !== \"No Min\" && filterAttributes.minBeds > itemAttributes.bedrooms) {\n    return false;\n  }\n\n  if (filterAttributes.minBeds !== \"No Min\" && filterAttributes.minBeds > itemAttributes.bedrooms) {\n    return false;\n  }\n\n  if (filterAttributes.maxBeds !== \"No Max\" && filterAttributes.maxBeds < itemAttributes.bedrooms) {\n    return false;\n  }\n\n  if (filterAttributes.firstFloorPrimary && !itemAttributes.firstFloorPrimary) {\n    return false;\n  }\n\n  let hvacAge = new Date().getFullYear() - itemAttributes.hvacYear;\n\n  if (filterAttributes.hvacAgeRange < hvacAge) {\n    return false;\n  }\n\n  let waterHeaterAge = new Date().getFullYear() - itemAttributes.waterHeaterYear;\n\n  if (filterAttributes.waterHeaterAgeRange < waterHeaterAge) {\n    return false;\n  }\n\n  let pricePerSqft = Math.round(itemAttributes.price / itemAttributes.sqft);\n  console.log(pricePerSqft, filterAttributes.priceSqftMin);\n\n  if (filterAttributes.minPriceSqft !== \"No Min\" && filterAttributes.minPriceSqft > pricePerSqft) {\n    return false;\n  }\n\n  if (filterAttributes.maxPriceSqft !== \"No Max\" && filterAttributes.maxPriceSqft < pricePerSqft) {\n    return false;\n  }\n\n  return true;\n};\nexport const getPrice = price => {\n  return \"$\" + price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};","map":{"version":3,"sources":["/Users/bryan/Code/ToddThomasPaintingApp/todd-thomas-painting-app-2/src/utilities/util.js"],"names":["filterProperties","filterAttributes","itemAttributes","minPrice","price","maxPrice","minBeds","bedrooms","maxBeds","firstFloorPrimary","hvacAge","Date","getFullYear","hvacYear","hvacAgeRange","waterHeaterAge","waterHeaterYear","waterHeaterAgeRange","pricePerSqft","Math","round","sqft","console","log","priceSqftMin","minPriceSqft","maxPriceSqft","getPrice","toString","replace"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,cAAnB,KAAsC;AACpE,MACED,gBAAgB,CAACE,QAAjB,KAA8B,QAA9B,IACAF,gBAAgB,CAACE,QAAjB,GAA4BD,cAAc,CAACE,KAF7C,EAGE;AACA,WAAO,KAAP;AACD;;AAED,MACEH,gBAAgB,CAACI,QAAjB,KAA8B,QAA9B,IACAJ,gBAAgB,CAACI,QAAjB,GAA4BH,cAAc,CAACE,KAF7C,EAGE;AACA,WAAO,KAAP;AACD;;AAED,MACEH,gBAAgB,CAACK,OAAjB,KAA6B,QAA7B,IACAL,gBAAgB,CAACK,OAAjB,GAA2BJ,cAAc,CAACK,QAF5C,EAGE;AACA,WAAO,KAAP;AACD;;AAED,MACEN,gBAAgB,CAACK,OAAjB,KAA6B,QAA7B,IACAL,gBAAgB,CAACK,OAAjB,GAA2BJ,cAAc,CAACK,QAF5C,EAGE;AACA,WAAO,KAAP;AACD;;AAED,MACEN,gBAAgB,CAACO,OAAjB,KAA6B,QAA7B,IACAP,gBAAgB,CAACO,OAAjB,GAA2BN,cAAc,CAACK,QAF5C,EAGE;AACA,WAAO,KAAP;AACD;;AAED,MAAIN,gBAAgB,CAACQ,iBAAjB,IAAsC,CAACP,cAAc,CAACO,iBAA1D,EAA6E;AAC3E,WAAO,KAAP;AACD;;AAED,MAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,WAAX,KAA2BV,cAAc,CAACW,QAAxD;;AACA,MAAIZ,gBAAgB,CAACa,YAAjB,GAAgCJ,OAApC,EAA6C;AAC3C,WAAO,KAAP;AACD;;AAED,MAAIK,cAAc,GAChB,IAAIJ,IAAJ,GAAWC,WAAX,KAA2BV,cAAc,CAACc,eAD5C;;AAEA,MAAIf,gBAAgB,CAACgB,mBAAjB,GAAuCF,cAA3C,EAA2D;AACzD,WAAO,KAAP;AACD;;AAED,MAAIG,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWlB,cAAc,CAACE,KAAf,GAAuBF,cAAc,CAACmB,IAAjD,CAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ,EAA0BjB,gBAAgB,CAACuB,YAA3C;;AACA,MACEvB,gBAAgB,CAACwB,YAAjB,KAAkC,QAAlC,IACAxB,gBAAgB,CAACwB,YAAjB,GAAgCP,YAFlC,EAGE;AACA,WAAO,KAAP;AACD;;AAED,MACEjB,gBAAgB,CAACyB,YAAjB,KAAkC,QAAlC,IACAzB,gBAAgB,CAACyB,YAAjB,GAAgCR,YAFlC,EAGE;AACA,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD,CApEM;AAsEP,OAAO,MAAMS,QAAQ,GAAIvB,KAAD,IAAW;AACjC,SAAO,MAAMA,KAAK,CAACwB,QAAN,GAAiBC,OAAjB,CAAyB,uBAAzB,EAAkD,GAAlD,CAAb;AACD,CAFM","sourcesContent":["export const filterProperties = (filterAttributes, itemAttributes) => {\n  if (\n    filterAttributes.minPrice !== \"No Min\" &&\n    filterAttributes.minPrice > itemAttributes.price\n  ) {\n    return false;\n  }\n\n  if (\n    filterAttributes.maxPrice !== \"No Max\" &&\n    filterAttributes.maxPrice < itemAttributes.price\n  ) {\n    return false;\n  }\n\n  if (\n    filterAttributes.minBeds !== \"No Min\" &&\n    filterAttributes.minBeds > itemAttributes.bedrooms\n  ) {\n    return false;\n  }\n\n  if (\n    filterAttributes.minBeds !== \"No Min\" &&\n    filterAttributes.minBeds > itemAttributes.bedrooms\n  ) {\n    return false;\n  }\n\n  if (\n    filterAttributes.maxBeds !== \"No Max\" &&\n    filterAttributes.maxBeds < itemAttributes.bedrooms\n  ) {\n    return false;\n  }\n\n  if (filterAttributes.firstFloorPrimary && !itemAttributes.firstFloorPrimary) {\n    return false;\n  }\n\n  let hvacAge = new Date().getFullYear() - itemAttributes.hvacYear;\n  if (filterAttributes.hvacAgeRange < hvacAge) {\n    return false;\n  }\n\n  let waterHeaterAge =\n    new Date().getFullYear() - itemAttributes.waterHeaterYear;\n  if (filterAttributes.waterHeaterAgeRange < waterHeaterAge) {\n    return false;\n  }\n\n  let pricePerSqft = Math.round(itemAttributes.price / itemAttributes.sqft);\n  console.log(pricePerSqft, filterAttributes.priceSqftMin);\n  if (\n    filterAttributes.minPriceSqft !== \"No Min\" &&\n    filterAttributes.minPriceSqft > pricePerSqft\n  ) {\n    return false;\n  }\n\n  if (\n    filterAttributes.maxPriceSqft !== \"No Max\" &&\n    filterAttributes.maxPriceSqft < pricePerSqft\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const getPrice = (price) => {\n  return \"$\" + price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n"]},"metadata":{},"sourceType":"module"}